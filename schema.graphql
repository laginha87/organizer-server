"""
Autogenerated input type of CreateNewTaskMutation
"""
input CreateNewTaskMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  task: CreateTaskInput!
}

"""
Autogenerated return type of CreateNewTaskMutation
"""
type CreateNewTaskMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  task: Task!
}

input CreateTaskInput {
  description: String!
  dificulty: Dificulty!
  duration: Duration!
  ickyness: Ickyness!
  priority: Priority!
  title: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar DateTime

enum Dificulty {
  """
  Easy
  """
  easy

  """
  Hard
  """
  hard

  """
  Medium
  """
  medium
}

enum Duration {
  """
  Long
  """
  long

  """
  Normal
  """
  normal

  """
  Short
  """
  short
}

enum Ickyness {
  """
  Chicken
  """
  chicken

  """
  Frog
  """
  frog

  """
  Tepid
  """
  tepid
}

type Mutation {
  createNewTask(input: CreateNewTaskMutationInput!): CreateNewTaskMutationPayload
}

enum Priority {
  """
  High
  """
  high

  """
  Low
  """
  low

  """
  Medium
  """
  medium
}

type Query {
  """
  The inbox
  """
  inbox: [Task!]!
}

type Task {
  createdAt: DateTime
  description: String
  dificulty: Dificulty
  duration: Duration
  ickyness: Ickyness
  id: ID
  priority: Priority
  title: String
  updatedAt: DateTime
}